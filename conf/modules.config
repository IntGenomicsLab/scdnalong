/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Config file for defining DSL2 per module options and publishing paths
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Available keys to override module options:
        ext.args   = Additional arguments appended to command in module.
        ext.args2  = Second set of arguments appended to command in module (multi-tool modules).
        ext.args3  = Third set of arguments appended to command in module (multi-tool modules).
        ext.prefix = File name prefix for output files.
----------------------------------------------------------------------------------------
*/

process {

    publishDir = [
        path: { "${params.outdir}/${task.process.tokenize(':')[-1].tokenize('_')[0].toLowerCase()}" },
        mode: params.publish_dir_mode,
        saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
    ]
}

/////////////////////
// REFERENCE FILES //
/////////////////////
//TODO: doublecheck
// PREPARE_REFERENCE_FILES
process {
    withName: '.*:PREPARE_REFERENCE_FILES:SAMTOOLS_FAIDX' {
        publishDir = [
            enabled: false
        ]
    }
}

///////////////////////
//  FASTQ SPLITTING  //
///////////////////////

// SEQKIT_SPLIT
process {
    withName: SEQKIT_SPLIT2 {
    if (params.split_fastq_n != null){
        ext.args = "--by-part ${params.split_fastq_n}"
        }
    publishDir = [
            enabled: false
        ]
    } 
}

///////////////////////
// BARCODE DETECTION //
///////////////////////

// FLEXIPLEX
process {
    withName: '.*:FLEXIPLEX_DISCOVERY' {
        ext.args = {
            def barcodeArg = ""
            switch (params.barcode_format) {
                case "10x_atac":
                    barcodeArg = '-x "ACCGAGATCTACAC" -b "????????????????" -x "CGCGTCTGTCGTCGGCAGCGTCAGATGTGTATAAGAGACAG" -f 8'
                    break
                //case "10x3v2":
                //    barcodeArg = "-d 10x3v2"
                //    break
            }
            barcodeArg.trim()
        }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/flexiplex/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}

process {
    withName: '.*:FLEXIPLEX_ASSIGN' {
        ext.args = {
            def barcodeArg = ""
            switch (params.barcode_format) {
                case "10x_atac":
                    barcodeArg = '-x "ACCGAGATCTACAC" -b "????????????????" -x "CGCGTCTGTCGTCGGCAGCGTCAGATGTGTATAAGAGACAG" -f 8'
                    break
                //case "10x3v2":
                //    barcodeArg = "-d 10x3v2"
                //    break
            }
            barcodeArg.trim()
        }
        publishDir = [
            path: { "${params.outdir}/${meta.id}/flexiplex/" },
            mode: params.publish_dir_mode,
            saveAs: { filename -> filename.equals('versions.yml') ? null : filename }
        ]
    }
}